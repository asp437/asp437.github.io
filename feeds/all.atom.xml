<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aleksandr Parfenov's Blog</title><link href="https://asp437.github.io/" rel="alternate"></link><link href="https://asp437.github.io/feeds/all.atom.xml" rel="self"></link><id>https://asp437.github.io/</id><updated>2017-10-22T00:00:00+03:00</updated><entry><title>Vim configuration and plugins for CÂ development</title><link href="https://asp437.github.io/posts/vim-for-c.html" rel="alternate"></link><published>2017-10-22T00:00:00+03:00</published><updated>2017-10-22T00:00:00+03:00</updated><author><name>Aleksandr Parfenov</name></author><id>tag:asp437.github.io,2017-10-22:/posts/vim-for-c.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;!!!&lt;span class="caps"&gt;IMPORTANT&lt;/span&gt;!!!&lt;/strong&gt; this post is a draft for testing blog publication on GitHub&amp;nbsp;Pages.&lt;/p&gt;
&lt;p&gt;Vim one of the most powerful and popular text editor for programing.
One of the strongest side of Vim is wide collection of plug-ins for most of use cases.
In this post I will tell about my configuration and set of plug-ins for C&amp;nbsp;development.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;&lt;strong&gt;!!!&lt;span class="caps"&gt;IMPORTANT&lt;/span&gt;!!!&lt;/strong&gt; this post is a draft for testing blog publication on GitHub&amp;nbsp;Pages.&lt;/p&gt;
&lt;p&gt;Vim one of the most powerful and popular text editor for programing.
One of the strongest side of Vim is wide collection of plug-ins for most of use cases.
In this post I will tell about my configuration and set of plug-ins for C&amp;nbsp;development.&lt;/p&gt;


&lt;h2&gt;Requirements and&amp;nbsp;expectations&lt;/h2&gt;
&lt;p&gt;There are few things that I expect from editor for fast and comfortable&amp;nbsp;work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fuzzy file&amp;nbsp;search&lt;/li&gt;
&lt;li&gt;Search for symbols (functions, constants,&amp;nbsp;etc.)&lt;/li&gt;
&lt;li&gt;Go to&amp;nbsp;definition&lt;/li&gt;
&lt;li&gt;Auto-completion for structure&amp;#8217;s fields (with type&amp;nbsp;information)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More complex helpers like debugger integration, function arguments tool-tip, refactoring, etc.
are useful, but I don&amp;#8217;t use them for some&amp;nbsp;reasons.&lt;/p&gt;
&lt;h2&gt;File and symbols&amp;nbsp;search&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;&lt;span class="caps"&gt;FZF&lt;/span&gt;&lt;/a&gt; is powerful plug-in for fuzzy-search for both terminal and Vim.
This plug-in supports both search for files with command &lt;code&gt;:Files&lt;/code&gt; and for symbols (tags) with command &lt;code&gt;:Tags&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;![alt&amp;nbsp;text][fzf-screenshot]&lt;/p&gt;
&lt;h2&gt;Go to&amp;nbsp;something&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cscope.sourceforge.net/"&gt;CScope&lt;/a&gt; is tool which provides ability for &amp;#8220;Go to&amp;#8221;/search commands on symbols for C code.
Your Vim should be compiled with &lt;code&gt;--enable-cscope&lt;/code&gt; flag to use this plug-in.
To use this plug-in with you code you should generate CScope tags for it using command-line utility.
The plug-in supports following&amp;nbsp;commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:cs find s&lt;/code&gt; search for all symbol&amp;nbsp;references&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find g&lt;/code&gt; search for global definition of the&amp;nbsp;symbol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find c&lt;/code&gt; search for calls to the&amp;nbsp;function&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find t&lt;/code&gt; search for&amp;nbsp;text&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find e&lt;/code&gt; do an &lt;code&gt;egrep&lt;/code&gt; search&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find f&lt;/code&gt; search for file&amp;nbsp;name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find i&lt;/code&gt; search for files which include target&amp;nbsp;file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:cs find d&lt;/code&gt; search functions that called by target&amp;nbsp;function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more comfortable use I you mappings similar to &lt;a href="https://github.com/chazy/cscope_maps/"&gt;cscope_maps&lt;/a&gt; for automatic use of name under&amp;nbsp;cursor.&lt;/p&gt;
&lt;h2&gt;Auto-completion&lt;/h2&gt;
&lt;p&gt;I use &lt;a href=""&gt;YouComleteMe&lt;/a&gt; plug-in for auto-completion for variety of languages include C.
The plug-in installation process is not easy since it requires manual compilation of server component.
The plug-in has client-server architecture with server written in C++.
Fortunately, compilation process is easy and can done in one command.
The only problem I face were related to &lt;code&gt;clang&lt;/code&gt; compiler (used as a back-end for C/C++), but the case
is described in &lt;span class="caps"&gt;FAQ&lt;/span&gt; of the&amp;nbsp;project.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Described settings and plugins are my personal choice and may be not optimal for you.
If have any ideas how to improve C/C++ development environment in Vim, you&amp;#8217;re welcome to comment your&amp;nbsp;ideas.&lt;/p&gt;</content><category term="Development Tools"></category><category term="Vim"></category></entry></feed>